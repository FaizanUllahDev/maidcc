// Mocks generated by Mockito 5.4.4 from annotations
// in maidcc/test/unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:hive/hive.dart' as _i3;
import 'package:maidcc/core/db/preferance_utils.dart' as _i7;
import 'package:maidcc/core/network/network_info.dart' as _i8;
import 'package:maidcc/feature/auth/data/models/user_model.dart' as _i2;
import 'package:maidcc/feature/auth/domain/login_respository.dart' as _i5;
import 'package:maidcc/feature/home/data/model/todo_model.dart' as _i12;
import 'package:maidcc/feature/home/data/model/todo_model_response_model.dart'
    as _i4;
import 'package:maidcc/feature/home/data/model/todo_request_model.dart' as _i11;
import 'package:maidcc/feature/home/domain/todo_repository.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserEntity_0 extends _i1.SmartFake implements _i2.UserEntity {
  _FakeUserEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBox_1<E> extends _i1.SmartFake implements _i3.Box<E> {
  _FakeBox_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoResponseModel_2 extends _i1.SmartFake
    implements _i4.TodoResponseModel {
  _FakeTodoResponseModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i5.LoginRepository {
  @override
  _i6.Future<_i2.UserEntity> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.UserEntity>.value(_FakeUserEntity_0(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.UserEntity>.value(_FakeUserEntity_0(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.UserEntity>);
}

/// A class which mocks [PreferencesUtil].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesUtil extends _i1.Mock implements _i7.PreferencesUtil {
  @override
  _i3.Box<dynamic> get preferences => (super.noSuchMethod(
        Invocation.getter(#preferences),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#preferences),
        ),
        returnValueForMissingStub: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#preferences),
        ),
      ) as _i3.Box<dynamic>);

  @override
  set preferences(_i3.Box<dynamic>? _preferences) => super.noSuchMethod(
        Invocation.setter(
          #preferences,
          _preferences,
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getPreferencesData(String? key) => super.noSuchMethod(
        Invocation.method(
          #getPreferencesData,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getBoolPreferencesData(
    String? key, {
    bool? defaultValue = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #getBoolPreferencesData,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> setPreferencesData(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPreferencesData,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  dynamic setBoolPreferencesData(
    String? key,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBoolPreferencesData,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<dynamic> clearPreferencesData() => (super.noSuchMethod(
        Invocation.method(
          #clearPreferencesData,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
        returnValueForMissingStub: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  @override
  _i6.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [UserEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserEntity extends _i1.Mock implements _i2.UserEntity {
  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set username(String? _username) => super.noSuchMethod(
        Invocation.setter(
          #username,
          _username,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set firstName(String? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastName(String? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set password(String? _password) => super.noSuchMethod(
        Invocation.setter(
          #password,
          _password,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set phone(String? _phone) => super.noSuchMethod(
        Invocation.setter(
          #phone,
          _phone,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set address(String? _address) => super.noSuchMethod(
        Invocation.setter(
          #address,
          _address,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set gender(String? _gender) => super.noSuchMethod(
        Invocation.setter(
          #gender,
          _gender,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set balance(num? _balance) => super.noSuchMethod(
        Invocation.setter(
          #balance,
          _balance,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isVerified(bool? _isVerified) => super.noSuchMethod(
        Invocation.setter(
          #isVerified,
          _isVerified,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
      ) as String);
}

/// A class which mocks [TodoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepository extends _i1.Mock implements _i10.TodoRepository {
  @override
  _i6.Future<_i4.TodoResponseModel> getTodos(_i11.TodoRequestModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [model],
        ),
        returnValue:
            _i6.Future<_i4.TodoResponseModel>.value(_FakeTodoResponseModel_2(
          this,
          Invocation.method(
            #getTodos,
            [model],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.TodoResponseModel>.value(_FakeTodoResponseModel_2(
          this,
          Invocation.method(
            #getTodos,
            [model],
          ),
        )),
      ) as _i6.Future<_i4.TodoResponseModel>);

  @override
  _i6.Future<void> addTodo(_i12.TodoModel? model) => (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [model],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateTodo(_i12.TodoModel? model) => (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [model],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteTodo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [TodoResponseModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoResponseModel extends _i1.Mock implements _i4.TodoResponseModel {
  @override
  List<_i12.TodoModel> get todos => (super.noSuchMethod(
        Invocation.getter(#todos),
        returnValue: <_i12.TodoModel>[],
        returnValueForMissingStub: <_i12.TodoModel>[],
      ) as List<_i12.TodoModel>);

  @override
  int get total => (super.noSuchMethod(
        Invocation.getter(#total),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get skip => (super.noSuchMethod(
        Invocation.getter(#skip),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get limit => (super.noSuchMethod(
        Invocation.getter(#limit),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
      ) as String);
}
